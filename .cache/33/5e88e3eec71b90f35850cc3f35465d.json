{"id":"node_modules/overmind/es/internalTypes.js","dependencies":[{"name":"/Users/tollefsen/code/idletown/node_modules/overmind/es/internalTypes.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tollefsen/code/idletown/package.json","includedInParent":true,"mtime":1546780215350},{"name":"/Users/tollefsen/code/idletown/node_modules/overmind/package.json","includedInParent":true,"mtime":1545927827891}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventType = void 0;\nvar EventType;\nexports.EventType = EventType;\n\n(function (EventType) {\n  EventType[\"ACTION_START\"] = \"action:start\";\n  EventType[\"ACTION_END\"] = \"action:end\";\n  EventType[\"OPERATOR_START\"] = \"operator:start\";\n  EventType[\"OPERATOR_END\"] = \"operator:end\";\n  EventType[\"OPERATOR_ASYNC\"] = \"operator:async\";\n  EventType[\"MUTATIONS\"] = \"mutations\";\n  EventType[\"EFFECT\"] = \"effect\";\n  EventType[\"DERIVED\"] = \"derived\";\n  EventType[\"DERIVED_DIRTY\"] = \"derived:dirty\";\n  EventType[\"REACTION_ADD\"] = \"reaction:add\";\n  EventType[\"REACTION_UPDATE\"] = \"reaction:update\";\n  EventType[\"REACTION_REMOVE\"] = \"reaction:remove\";\n  EventType[\"COMPONENT_ADD\"] = \"component:add\";\n  EventType[\"COMPONENT_UPDATE\"] = \"component:update\";\n  EventType[\"COMPONENT_REMOVE\"] = \"component:remove\";\n})(EventType || (exports.EventType = EventType = {}));","map":{"mappings":[{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":7,"column":4}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":7,"column":13}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":10,"column":1}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":10,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":10,"column":20}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":10,"column":22}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":26}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":11,"column":44}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":24}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":25}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":28}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":12,"column":40}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":28}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":29}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":32}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":13,"column":48}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":26}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":14,"column":44}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":28}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":29}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":32}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":15,"column":48}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":23}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":24}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":16,"column":38}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":20}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":21}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":24}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":17,"column":32}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":21}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":22}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":25}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":18,"column":34}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":28}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":31}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":19,"column":46}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":26}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":44}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":29}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":33}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":50}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":29}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":33}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":50}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":27}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":28}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":31}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":23,"column":46}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":31}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":34}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":52}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":2}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":11}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":30}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":31}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":34}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":25,"column":52}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":30,"column":1},"generated":{"line":26,"column":0}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":26,"column":1}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":26,"column":3}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":26,"column":12}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":26,"column":37}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":26,"column":46}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":26,"column":49}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":26,"column":51}},{"source":"../src/internalTypes.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":26,"column":52}}],"sources":{"../src/internalTypes.ts":"import { IMutation, ProxyStateTree } from 'proxy-state-tree'\nimport { Configuration, TAction, TOperator, TStateObject } from './types'\n\nexport type SubType<Base, Condition> = Pick<\n  Base,\n  { [Key in keyof Base]: Base[Key] extends Condition ? Key : never }[keyof Base]\n>\n\nexport type Options = {\n  name?: string\n  devtools?: string | boolean\n}\n\nexport enum EventType {\n  ACTION_START = 'action:start',\n  ACTION_END = 'action:end',\n  OPERATOR_START = 'operator:start',\n  OPERATOR_END = 'operator:end',\n  OPERATOR_ASYNC = 'operator:async',\n  MUTATIONS = 'mutations',\n  EFFECT = 'effect',\n  DERIVED = 'derived',\n  DERIVED_DIRTY = 'derived:dirty',\n  REACTION_ADD = 'reaction:add',\n  REACTION_UPDATE = 'reaction:update',\n  REACTION_REMOVE = 'reaction:remove',\n  COMPONENT_ADD = 'component:add',\n  COMPONENT_UPDATE = 'component:update',\n  COMPONENT_REMOVE = 'component:remove',\n}\n\nexport type Execution = {\n  actionId: number\n  executionId: number\n  actionName: string\n  operatorId: number\n  path: string[]\n  emit: (event: EventType, value: any) => void\n}\n\nexport interface Events {\n  [EventType.ACTION_START]: Execution\n  [EventType.ACTION_END]: Execution\n  [EventType.OPERATOR_START]: Execution & {\n    path: string[]\n    type: string\n    name?: string\n  }\n  [EventType.OPERATOR_END]: Execution & {\n    path: string[]\n    isAsync: boolean\n    result: any\n  }\n  [EventType.OPERATOR_ASYNC]: Execution & {\n    path: string[]\n    type: string\n    name: string\n  }\n  [EventType.MUTATIONS]: Execution & {\n    mutations: IMutation[]\n  }\n  [EventType.DERIVED]: {\n    path: string\n    paths: string[]\n    updateCount: number\n    value: any\n  }\n  [EventType.DERIVED_DIRTY]: {\n    path: string\n    flushId: number\n  }\n  [EventType.EFFECT]: any\n  [EventType.REACTION_ADD]: {\n    path: string\n    statePath: string\n    updateCount: number\n  }\n  [EventType.REACTION_UPDATE]: {\n    path: string\n    statePath: string\n    updateCount: number\n    flushId: number\n  }\n  [EventType.REACTION_REMOVE]: {\n    path: string\n    statePath: string\n    updateCount: number\n  }\n  [EventType.COMPONENT_ADD]: {\n    componentId: number | string\n    componentInstanceId: number\n    name: string\n    paths: string[]\n  }\n  [EventType.COMPONENT_UPDATE]: {\n    componentId: number | string\n    componentInstanceId: number\n    name: string\n    paths: string[]\n    flushId?: number\n  }\n  [EventType.COMPONENT_REMOVE]: {\n    componentId: number | string\n    componentInstanceId: number\n    name: string\n  }\n}\n\n// ============= PRIVATE TYPES FOR APP\n\nexport type TBaseContext<Config extends Configuration> = Config['effects'] & {\n  state: ResolveState<Config['state']>\n  execution: any\n}\n\ntype Derived = (parent: any, config: any) => any\n\nexport type ResolveState<State extends TStateObject> = State extends undefined\n  ? {}\n  : {\n      [P in keyof State]: State[P] extends Derived\n        ? ReturnType<State[P]>\n        : State[P] extends Array<any>\n        ? State[P]\n        : State[P] extends TStateObject\n        ? ResolveState<State[P]>\n        : State[P]\n    }\n\ntype TActionValue<T> = T extends (a1: infer TContext) => any\n  ? (TContext extends { value: infer TValue } ? TValue : never)\n  : never\n\ntype TOperationValue<T> = T extends (\n  arg1: any,\n  arg2: infer TContext,\n  arg3: any\n) => any\n  ? (TContext extends { value: infer TValue } ? TValue : never)\n  : never\n\ntype NestedActions =\n  | {\n      [key: string]:\n        | TAction<any, any>\n        | TOperator<any, any, any>\n        | NestedActions\n    }\n  | undefined\n\nexport type ResolveActions<\n  Actions extends NestedActions\n> = Actions extends undefined\n  ? {}\n  : {\n      [T in keyof Actions]: Actions[T] extends TAction<any, any>\n        ? [TActionValue<Actions[T]>] extends [void]\n          ? () => Promise<ReturnType<Actions[T]>>\n          : (value: TActionValue<Actions[T]>) => Promise<ReturnType<Actions[T]>>\n        : Actions[T] extends TOperator<any, any, any>\n        ? [TOperationValue<Actions[T]>] extends [void]\n          ? () => Promise<ReturnType<Actions[T]>>\n          : (\n              value: TOperationValue<Actions[T]>\n            ) => Promise<ReturnType<Actions[T]>>\n        : Actions[T] extends NestedActions\n        ? ResolveActions<Actions[T]>\n        : never\n    }\n"},"lineCount":null}},"hash":"0a7edb2a76f0dd028963ddd7666c1a5b","cacheData":{"env":{}}}